#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <conio.h>
#include <time.h>

int isNumericPassword(const char* password) {
    int length = strlen(password);
    for (int i = 0; i < length; i++) {
       if (isdigit(password[i]) ? 0 : 1) {
    return 0;
    }
    }
    return 1;
}

int main() {
    char password[30];
    printf("Enter your password: ");

    int i = 0;
    char ch;
    while ((ch = getch()) != '\r') {
        if (ch == '\b') { // Backspace
            if (i > 0) {
                i--;
                password[i] = '\0';
                printf("\b \b");
            }
        } else {
            password[i] = ch;
            i++;
            printf("*");
        }
    }
    password[i] = '\0';
    printf("\n");

    char predicted_pass[30];

    if (isNumericPassword(password)) {
        // Numeric password cracking
        srand((unsigned)time(NULL));
        while (strcmp(predicted_pass, password) != 0) {
            int length = strlen(password);
            for (int i = 0; i < length; i++) {
                predicted_pass[i] = (char)((rand() % 10) + '0');
            }
            predicted_pass[length] = '\0';
            printf("%s\n", predicted_pass);

            if (strcmp(predicted_pass, password) == 0) {
                break;
            }
        }
    } else {
        // String password cracking
        srand((unsigned)time(NULL));
        while (strcmp(predicted_pass, password) != 0) {
            int length = strlen(password);
            for (int i = 0; i < length; i++) {
                if (isalpha(password[i])) {
                    char random_char = (char)((rand() % 26) + 'a');
                    predicted_pass[i] = random_char;
                } else {
                    predicted_pass[i] = password[i];
                }
            }
            predicted_pass[length] = '\0';
            printf("%s\n", predicted_pass);

            if (strcmp(predicted_pass, password) == 0) {
                break;
            }
        }
    }

    printf("Your password is: %s\n", predicted_pass);

    return 0;
}
